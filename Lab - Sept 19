Ques 1

#include<stdio.h>
int lineno = 0;
%}
%option noyywrap
digit [0-9]
%%
\+ {return PLUS;}
\- {return SUB;}
"*" {return MULT;}
"/" {return DIV;}
{digit}+ {yylval = atoi(yytext); return NUMBER;}
[\n] {++lineno; return LINE;}
. {return ERROR;}
%%

%{
extern int lineno;
%}
%token PLUS SUB MULT DIV NUMBER LINE ERROR
%%
S:E LINE {printf("Result: %d\n", $1);}
;
E:E PLUS T {$$ = $1 + $3;}
| E SUB T {$$ = $1 - $3;}
| T {$$ = $1;}
;
T:T MULT F {$$ = $1 * $3;}
| T DIV F {$$ = $1 / $3; printf("Value = %d\n", $$);}
| F {$$ = $1;}
;
F:NUMBER {$$ = $1;}
;
%%
#include"lex.yy.c"
int yyerror() {
    printf("An ERROR was encountered at LINE %d\n", lineno);
}
int main() {
    printf("Enter the expression: ");
    yyparse();
    return 0;
}


Ques 2

%{
#include<stdio.h>
int lineno = 0;
%}
%option noyywrap
digit [0-9]
%%
\+ {return PLUS;}
\- {return SUB;}
"*" {return MULT;}
"/" {return DIV;}
{digit}+ {yylval = atoi(yytext); return NUMBER;}
[\n] {++lineno; return LINE;}
. {return ERROR;}
%%

%{
extern int lineno;
%}
%token PLUS SUB MULT DIV NUMBER LINE ERROR
%left PLUS SUB
%left DIV MULT
%%
S:E LINE {printf("Result: %d\n", $1);}
;
E:E PLUS T {$$ = $1 + $3;}
| E SUB T {$$ = $1 - $3;}
| T {$$ = $1;}
;
T:T MULT F {$$ = $1 * $3;}
| T DIV F {$$ = $1 / $3; printf("Value = %d\n", $$);}
| F {$$ = $1;}
;
F:NUMBER {$$ = $1;}
;
%%
#include"lex.yy.c"
int yyerror() {
    printf("An ERROR was encountered at LINE %d\n", lineno);
}
int main() {
    printf("Enter the expression: ");
    yyparse();
    return 0;
}

